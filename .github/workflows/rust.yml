name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: FreeBSD-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-freebsd
            bin: format_convert
            name: precious-FreeBSD-x86_64.tar.gz
            command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: format_convert.exe
            name: precious-Windows-x86_64.zip
            command: both

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: format_convert
            name: precious-Darwin-x86_64.tar.gz
            command: both

            # more release targets here ...

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
      - name: Release Binary
        shell: bash
        run: |
          PROJECT_NAME="format_convert"
          BIN_SUFFIX=""
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            BIN_SUFFIX=".exe"
          fi
 
          # The built binary output location
          BIN_OUTPUT="./target/${{ matrix.platform.target }}/release/format_convert${BIN_SUFFIX}"
 
          ls -la
          echo -------release
          ls -la "./target/${{ matrix.platform.target }}/release"
          echo -------release-exe
          ls "${BIN_OUTPUT}"
            
          mkdir download
          # Move the built binary where you want it
          mv "${BIN_OUTPUT}" "./download/${{ matrix.platform.target }}"
      - name: upload build exe
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: download
      # - name: download-exe
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-lib

